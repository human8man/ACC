#include "Mesh/Skin/SkinMeshObject.h"
#include "Camera/Camera.h"


SkinMeshObject::SkinMeshObject()
	: m_pMesh		( nullptr )
	, m_pAnimCtrl	( nullptr )
{
}

SkinMeshObject::~SkinMeshObject()
{
	DetachMesh();
}


//=============================================================================
//		更新処理
//=============================================================================
void SkinMeshObject::Update()
{
	if (m_pMesh == nullptr) { return; }
}


//=============================================================================
//		描画処理
//=============================================================================
void SkinMeshObject::Draw( D3DXMATRIX& View, D3DXMATRIX& Proj, LIGHT& Light)
{
	if (m_pMesh == nullptr) {
		return;
	}

	// 描画直前で座標や回転情報などを更新
	m_pMesh->SetPosition(m_vPosition);
	m_pMesh->SetRotation(m_vRotation);
	m_pMesh->SetScale(m_vScale);

	// レンダリング
	m_pMesh->Render( View, Proj, Light, Camera::GetInstance()->GetPos(), m_pAnimCtrl );
}


//=============================================================================
//		メッシュを接続する
//=============================================================================
void SkinMeshObject::AttachMesh( SkinMesh& pMesh )
{
	m_pMesh = &pMesh;

	// アニメーションコントローラを取得
	LPD3DXANIMATIONCONTROLLER pAC = m_pMesh->GetAnimationController();

	// アニメーションコントローラのクローンを作成
	if (FAILED(
		pAC->CloneAnimationController(
			pAC->GetMaxNumAnimationOutputs(),
			pAC->GetMaxNumAnimationSets(),
			pAC->GetMaxNumTracks(),
			pAC->GetMaxNumEvents(),
			&m_pAnimCtrl)))		// (out)クローン作成先
	{
		_ASSERT_EXPR(false, L"アニメーションコントローラのクローン作成失敗");
	}
}


//=============================================================================
//		メッシュを切り離す
//=============================================================================
void SkinMeshObject::DetachMesh()
{
	m_pMesh = nullptr;

	SAFE_RELEASE( m_pAnimCtrl );
}
